GROCERY APP
GROCERYAPP
TITLE : To build an grocery app by using android.
SOFTWARE REQUIRED : android studio.2021.2.1 and some other tools.
INTRODUCTION :
An online grocer is either a brick-and-mortar supermarket or grocery store that allows online
ordering, or a standalone e-commerce service that includes grocery items.There is usually a
delivery charge for this service. Brick-and-mortar supermarkets that have built internet
channels to better service their clients are known as online grocers. Online grocery delivery
services are available throughout Europe, Asia and North America, mostly in urban c enters.
The online ordering is done through e-commerce websites or mobile apps.
The COVID-19 pandemic greatly accelerated the growth of online grocers, and in the first
few months of the pandemics online grocery shopping increased by 300%. In addition, first-
time online grocery shoppers accounted for 41 percent of online grocery shoppers.The
epidemic of COVID-19 has hastened the uptake of online grocery shopping. Pre-COVID-19
food shopping activity accounted for 9 percent of the market, but 63 percent of consumers
worldwide purchased more groceries online after the outbreak than they did before they
were socially isolated.
Most local online grocers have their own drivers. The most common type of personal
delivery involves storing grocery inventory in a warehouse to deliver to customers
once orders are placed. Another type of personal delivery which is less common is
based on just-in-time business in which there is no warehouse or inventory. In this
type of delivery, customers place orders for next-day delivery. The online grocer
shops for the groceries on the morning of the delivery day.
Some grocery fulfilment c enters are set up as dark stores. Online-only grocers typically
have warehouses or distribution c enters nearby, to allow local shipping of refrigerated items.
Online grocers with a large regional or national delivery area may ship groceries using
courier services. If the order contains cold or frozen items, this involves "flash freezing" the
goods and pack them into special shipping containers.
Companies have experimented with automated delivery modes including drone delivery and
robots. For instance, in Fall 2016 Washington, D.C. approved a trial run of rolling delivery
drones produced by Star ship Technologies. The earthbound robots are similar to wheeled
coolers and carry around 40 pounds of groceries.
Online grocery stores may allow facilitating local food which may reduce the environmental
impact of food transport. Small-scale farmers have been embracing digital technologies as a
way to sell produce directly, and community-supported agriculture and direct-sell delivery
systems are on the rise during the coronavirus pandemic.Furthermore, weekly grocery
deliveries can be a better choice than individual trips to a store.
STEPS FOR THE PROJECT:
STEP-1:Create a New ProjectTo create a new project in Android Studio i refer to How to Create/Start a
New Project in Android Studio. Note that select Java as the programming
language.
STEP-2 : Add dependency of Slider View in build.gradle file
Navigate to the Gradle scripts and then to build.gradle(Module) level. Add
below line in build.gradle file in the dependencies section.
CODE:
// dependency for slider view
implementation ‘com.github.smarteist:autoimageslider:1.3.9’
// dependency for loading image from url
implementation “com.github.bumptech.glide:glide:4.11.0”
STEP-3 : Add internet permission in the AndroidManifest.xml file
Navigate to the app > Manifest to open the Manifest file and add below two
lines.
CODE:
<!–Permission for internet–>
<uses-permission android:name=”android.permission.INTERNET” />
<uses-permission
android:name=”android.permission.ACCESS_NETWORK_STATE” />
STEP-4 : Working with the activity_main.xml file
Go to the activity_main.xml file and refer to the following code. Below is the
code for the activity_main.xml file.
CODE FOR XML :
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
xml:android="http://schemas.android.com/apk/res/android"
xml:app="http://schemas.android.com/apk/res-auto"
xml:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">
<!--
slider animation duration is to set duration for transition between two
slides
sliderautocycledirection is to set animation between transition of your
slides
slider indicator enables is used to display the indicators for slider
slider indicator gravity is to set gravity for indicator gravity
slider indicator margin is to set margin for indicator
slider indicator orientation is used to add orientation for slider
slider indicator padding is use to add padding to indicator
slider indicator selected col or is use to specify selected col or
and slider indicator unselected col or is use to specify the col or when
the slider is unselected
slider scroll time in sec is used to specify scrolling time in seconds
-->
<com.smarteist.autoimageslider.SliderView
android:id="@+id/slider"
android:layout_width="match_parent"
android:layout_height="150dp"
android:layout_centerInParent="true"
app:sliderAnimationDuration="600"
app:sliderAutoCycleDirection="back_and_forth"
app:sliderIndicatorAnimationDuration="600"
app:sliderIndicatorEnabled="true"
app:sliderIndicatorGravity="center_horizontal|bottom"
app:sliderIndicatorMargin="15dp"
app:sliderIndicatorOrientation="horizontal"
app:sliderIndicatorPadding="3dp"
app:sliderIndicatorRadius="2dp"
app:sliderIndicatorSelectedColor="#5A5A5A"
app:sliderIndicatorUnselectedColor="#FFF"
app:sliderScrollTimeInSec="1" />
</RelativeLayout>
STEP-5 : Create a new Modal class for storing data
Navigate to app > Java > your app’s package name and then right-click on it
and New > Java class and name your Model class as SliderData and below
code inside that Java class. Below is the code for the SliderData.java file.
Comments are added inside the code to understand the code in more detail.
CODE FOR JAVA :
public class SliderData {
// image url is used to
// store the url of image
private String imgUrl;
// Constructor method.
public SliderData(String imgUrl) {
this.imgUrl = imgUrl;
}
// Getter method
public String getImgUrl() {
return imgUrl;
}
// Setter method
public void setImgUrl(String imgUrl) {
this.imgUrl = imgUrl;
}
}
STEP - 6: Create an XML file for the items of SliderView
Navigate to the app > rest > layout > Right-click on it and select New >
Layout Resource File and then name your XML file as slider_layout.xml.
After creating this file add the below code to it.
CODE FOR XML :
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
xml:android="http://schemas.android.com/apk/res/android"
android:layout_width="match_parent"
android:layout_height="match_parent">
<!--Image we will display is our slider view-->
<ImageView
android:id="@+id/my image"
android:layout_width="400dp"
android:layout_height="300dp"
android:layout_centerHorizontal="true"
android:contentDescription="@string/app_name" />
</RelativeLayout>
STEP - 7: Create Adapter Class for setting data to each item of our
